@model IEnumerable<QA1_SYSTEM.Models.ItemRequest>

@{
    ViewData["Title"] = "Index";
}

<h1>PURCHASE REQUEST</h1>
<div>
    <div class="d-flex justify-content-between">
        <div>
            <a asp-action="Create" style="background-color: #007bff; color: #fff; padding: 10px 20px; text-decoration: none;" data-bs-toggle="modal" data-bs-target="#createmodal">Create New</a>
        </div>
    </div>
</div>
<div class="card" style="padding:20px;"> 
    <hr />
  <div class="table-responsive text-nowrap">
        <table id="itemRequest_table" class="display" style="width:100%;"> 
            <thead>
                <tr>
                    <th></th>
                    <th>@Html.DisplayNameFor(model => model.status)</th>
                    <th>@Html.DisplayNameFor(model => model.req_date)</th>
                    <th>@Html.DisplayNameFor(model => model.description)</th>
                    <th>@Html.DisplayNameFor(model => model.req_qty)</th>
                    <th>@Html.DisplayNameFor(model => model.reason)</th>
                    <th>@Html.DisplayNameFor(model => model.requestor)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.id" >Update</a> |
                            <a asp-action="Details" asp-route-id="@item.id" data-bs-toggle="modal" data-bs-target="#editmodal" onclick="loadDetailsModalItemRequest(@item.id)">Details</a>
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.status)</td>
                        <td>@Html.DisplayFor(modelItem => item.req_date)</td>
                        <td>@Html.DisplayFor(modelItem => item.description)</td>
                        <td>@Html.DisplayFor(modelItem => item.req_qty)</td>
                        <td>@Html.DisplayFor(modelItem => item.reason)</td>
                        <td>@Html.DisplayFor(modelItem => item.requestor)</td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<!-- Modal from add data-->
<div class="modal fade" id="createmodal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Item Request</h1>
                <div class="outer">
                    <div data-bs-dismiss="modal" class="inner">
                        <label class="labelModal">Back</label>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                @{
                    Html.RenderPartial("~/Views/ItemRequest/Create.cshtml", new ItemRequest());
                }
                

            </div>
            <div class="progress" id="progressBarContainer">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" id="progressBar"></div>
            </div>

            <div id="resultMessage"></div>

        </div>
    </div>
</div>

@* <!-- Modal from add data-->
<div class="modal fade" id="editmodal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Item Request</h1>
                <div class="outer">
                    <div data-bs-dismiss="modal" class="inner">
                        <label class="labelModal">Back</label>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                @{
                    Html.RenderPartial("~/Views/ItemRequest/Edit.cshtml", new ItemRequest());
                }
            </div>

        </div>
    </div>
</div> *@

<!-- Modal from add data-->
<div class="modal fade" id="detailmodal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Item Request</h1>
                <div class="outer">
                    <div data-bs-dismiss="modal" class="inner">
                        <label class="labelModal">Back</label>
                    </div>
                </div>
                @* <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">Close</button> *@
            </div>
            <div class="modal-body">
                @{
                    Html.RenderPartial("~/Views/ItemRequest/Details.cshtml", new ItemRequest());
                }
            </div>

        </div>
    </div>
</div>


@section scripts {
    <script>
        $(document).ready(function () {
            $("#createmodal form").on("submit", function (e) {
                e.preventDefault();

                // Hide the submit button and show the progress bar
                $("#sendEmailBtn").hide();
                $("#progressBarContainer").show();
                $("#resultMessage").html("<div class='alert alert-info'>Saving your data, please wait...</div>");

                var formData = new FormData(this);

                $.ajax({
                    url: "@Url.Action("Create", "ItemRequest")",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    xhr: function () {
                        // Create an XHR object to track progress
                        var xhr = new window.XMLHttpRequest();

                        xhr.upload.addEventListener("progress", function (e) {
                            if (e.lengthComputable) {
                                var percentComplete = (e.loaded / e.total) * 100;
                                $("#progressBar").css("width", percentComplete + "%");
                            }
                        }, false);

                        return xhr;
                    },
                    success: function (data) {
                        // Hide the progress bar and show a success message
                        $("#progressBarContainer").hide();
                        $("#sendEmailBtn").show();
                        $("#resultMessage").html("<div class='alert alert-success'>Data saved successfully.</div>");


                        // Close the modal after 3 seconds
                        setTimeout(function () {
                            $("#createmodal").modal("hide");
                        }, 1500);
                    },
                    error: function (error) {
                        // Hide the progress bar and show an error message
                        $("#progressBarContainer").hide();
                        $("#resultMessage").html("<div class='alert alert-danger'>Error saving data: " + error.responseText + "</div>");
                    }
                });
            });
        });
    </script>
}
